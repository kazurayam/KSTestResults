apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'maven'

group    = 'com.kazurayam'
//artifact = 'Materials'
version  = '0.47.0'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

ext {
    groovyVersion  = '2.4.9'
    logbackVersion = '1.2.3'
    slf4jVersion   = '1.7.2'
}

repositories {
    jcenter()
    mavenLocal()
}

dependencies {
    compile "org.codehaus.groovy:groovy-all:${groovyVersion}"

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: "${slf4jVersion}"

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    compile group: 'ch.qos.logback', name: 'logback-classic', version: "${logbackVersion}"

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-core
    compile group: 'ch.qos.logback', name: 'logback-core', version: "${logbackVersion}"
    
    // https://mvnrepository.com/artifact/ru.yandex.qatools.ashot/ashot
    compile group: 'ru.yandex.qatools.ashot', name: 'ashot', version: '1.5.4'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-math3
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
    
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'
    
    // https://mvnrepository.com/artifact/net.coobird/thumbnailator
    compile group: 'net.coobird', name: 'thumbnailator', version: '0.4.8'
    
    // https://mvnrepository.com/artifact/org.spockframework/spock-core
    testCompile group: 'org.spockframework', name: 'spock-core', version: '1.1-groovy-2.4'
}

def defaultEncoding = 'UTF-8'
tasks.withType(AbstractCompile).each { it.options.encoding = defaultEncoding }
tasks.withType(GroovyCompile).each   { it.groovyOptions.encoding = defaultEncoding }

test {
    include '**/materials/*Spec.class'
    include '**/materials/**/*Spec.class'
    finalizedBy jacocoTestReport
    outputs.upToDateWhen {false}
}

task pinpoint(type: Test) {
    //include '**/MaterialRepositorySpec.class'
    //include '**/RepositoryRootSpec.class'
    include '**/ThumbnailsSpec.class'
    //include '**/MaterialStatsSpec.class'
    outputs.upToDateWhen {false}
}

task groovydoc(type: Groovydoc, overwrite: true) {
    group = 'com.kazurayam'
    description = 'Generates Public API documents.'
    source = sourceSets.main.allGroovy
    classpath = sourceSets.main.runtimeClasspath
    //options.memberLevel = JavadocMemberLevel.PUBLIC
    //include '**/Helpers.groovy'
    //include '**/Material.groovy'
    //include '**/MaterialPair.groovy'
    //include '**/MaterialRepository.groovy'
    //include '**/MaterialRepositoryFactory.groovy'
    //exclude '**/*Test.groovy'
}

task publishGroovydoc(type: Copy) {
    from 'build/docs/groovydoc'
    into 'docs'
}

groovydoc.finalizedBy publishGroovydoc
